package com.small.tadpole.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class QuestionDealLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public QuestionDealLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public QuestionDealLogExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public QuestionDealLogExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public static Criteria newAndCreateCriteria() {
        QuestionDealLogExample example = new QuestionDealLogExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public QuestionDealLogExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public QuestionDealLogExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDealIdIsNull() {
            addCriterion("deal_id is null");
            return (Criteria) this;
        }

        public Criteria andDealIdIsNotNull() {
            addCriterion("deal_id is not null");
            return (Criteria) this;
        }

        public Criteria andDealIdEqualTo(Integer value) {
            addCriterion("deal_id =", value, "dealId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealIdEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealIdNotEqualTo(Integer value) {
            addCriterion("deal_id <>", value, "dealId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealIdNotEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealIdGreaterThan(Integer value) {
            addCriterion("deal_id >", value, "dealId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealIdGreaterThanColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("deal_id >=", value, "dealId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealIdGreaterThanOrEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealIdLessThan(Integer value) {
            addCriterion("deal_id <", value, "dealId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealIdLessThanColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealIdLessThanOrEqualTo(Integer value) {
            addCriterion("deal_id <=", value, "dealId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealIdLessThanOrEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealIdIn(List<Integer> values) {
            addCriterion("deal_id in", values, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdNotIn(List<Integer> values) {
            addCriterion("deal_id not in", values, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdBetween(Integer value1, Integer value2) {
            addCriterion("deal_id between", value1, value2, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdNotBetween(Integer value1, Integer value2) {
            addCriterion("deal_id not between", value1, value2, "dealId");
            return (Criteria) this;
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andIdEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andIdNotEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andIdGreaterThanColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andIdGreaterThanOrEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andIdLessThanColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andIdLessThanOrEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("note =", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andNoteEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("note = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("note <>", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andNoteNotEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("note <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("note >", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andNoteGreaterThanColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("note > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("note >=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andNoteGreaterThanOrEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("note >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("note <", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andNoteLessThanColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("note < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("note <=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andNoteLessThanOrEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("note <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("note not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("`state` is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("`state` is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(Integer value) {
            addCriterion("`state` =", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andStateEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("`state` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(Integer value) {
            addCriterion("`state` <>", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andStateNotEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("`state` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(Integer value) {
            addCriterion("`state` >", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andStateGreaterThanColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("`state` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("`state` >=", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andStateGreaterThanOrEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("`state` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateLessThan(Integer value) {
            addCriterion("`state` <", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andStateLessThanColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("`state` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(Integer value) {
            addCriterion("`state` <=", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andStateLessThanOrEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("`state` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateIn(List<Integer> values) {
            addCriterion("`state` in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<Integer> values) {
            addCriterion("`state` not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(Integer value1, Integer value2) {
            addCriterion("`state` between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(Integer value1, Integer value2) {
            addCriterion("`state` not between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andDealTimeIsNull() {
            addCriterion("deal_time is null");
            return (Criteria) this;
        }

        public Criteria andDealTimeIsNotNull() {
            addCriterion("deal_time is not null");
            return (Criteria) this;
        }

        public Criteria andDealTimeEqualTo(LocalDateTime value) {
            addCriterion("deal_time =", value, "dealTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealTimeEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealTimeNotEqualTo(LocalDateTime value) {
            addCriterion("deal_time <>", value, "dealTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealTimeNotEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealTimeGreaterThan(LocalDateTime value) {
            addCriterion("deal_time >", value, "dealTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealTimeGreaterThanColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("deal_time >=", value, "dealTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealTimeGreaterThanOrEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealTimeLessThan(LocalDateTime value) {
            addCriterion("deal_time <", value, "dealTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealTimeLessThanColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("deal_time <=", value, "dealTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria andDealTimeLessThanOrEqualToColumn(QuestionDealLog.Column column) {
            addCriterion(new StringBuilder("deal_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealTimeIn(List<LocalDateTime> values) {
            addCriterion("deal_time in", values, "dealTime");
            return (Criteria) this;
        }

        public Criteria andDealTimeNotIn(List<LocalDateTime> values) {
            addCriterion("deal_time not in", values, "dealTime");
            return (Criteria) this;
        }

        public Criteria andDealTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("deal_time between", value1, value2, "dealTime");
            return (Criteria) this;
        }

        public Criteria andDealTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("deal_time not between", value1, value2, "dealTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table question_deal_log
     *
     * @mbg.generated do_not_delete_during_merge Sat Mar 14 16:08:31 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        private QuestionDealLogExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        protected Criteria(QuestionDealLogExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public QuestionDealLogExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table question_deal_log
             *
             * @mbg.generated Sat Mar 14 16:08:31 CST 2020
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table question_deal_log
     *
     * @mbg.generated Sat Mar 14 16:08:31 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table question_deal_log
         *
         * @mbg.generated Sat Mar 14 16:08:31 CST 2020
         */
        void example(com.small.tadpole.domain.QuestionDealLogExample example);
    }
}